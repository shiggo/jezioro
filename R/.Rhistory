install.packages("~/Downloads/jezioro_0.13.tar.gz", repos = NULL, type = "source")
library(jezioro)
?jezioro
install.packages("gplots")
# The gplots library is necessary for the plottext function
library (gplots)
#Data Import and Formatting ####
#Import the running log (.csv text file)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data=raw[,(1:9)]
#Format the first column to dates and then append a new column containing just the year
data[,1]<-as.Date(data[,1], "%d-%b-%y")
data$year<-as.numeric(format(data[,1], format = "%Y"))
#Tests the "Type", "Weight", and "RHR" fields for values to creates a subset 'busy' of all rows with data
nothing =((data[(1:nrow(data)),2]=='NA') & (data[(1:nrow(data)),5]=='NA') & (data[(1:nrow(data)),8]=='NA') & (data[(1:nrow(data)),9]=='NA'))
busy=subset(data, nothing==FALSE)
#Create a vector for each year contained in the data set
year=levels(as.factor(busy$year))
#Determine activity frequencies ####
#Create the data.frame 'AFreq' rows (years), columns (activities)
AFreq<-data.frame(matrix(NA, nrow=length(year), ncol = 6))
colnames(AFreq)=c('Runs', 'Striking', 'Grappling', 'Yoga', 'Strength', 'Aerobic')
rownames(AFreq)=year
#Calculate the frequency of runs in each year
AFreq[,1]=summary(as.factor(busy$year[which(as.numeric(busy[,2])>=0)]))
#Unsure what is causing this error message, but it seems to be working
#'activities' combines the Type and Note 1 columns from 'busy'(to give a full list of activities with year)
activities <-rbind(cbind(busy[,5], busy$year), cbind(busy[,6], busy$year))
#Obtain a breakdown of activities by year with 'by'
activities <-by(activities[,1],activities[,2],summary)
#Peel out each activity name
temp=names(activities[[1]])
#Convert 'activities' from a list to a dataframe
activities <-data.frame(matrix(unlist(activities), nrow=length(year), byrow=T))
rownames(activities) <-year
colnames(activities) <-temp
#Tack a column of zeroes onto 'activities' so that a minimum of two keywords are always present (ensures that the rowSums function will work)
dummy <-rep(0, times=nrow(activities))
activities=cbind(activities, dummy)
#Determine the locations of matches for the "Striking" keywords in 'activities'
keywords=c("Muay Thai","Kickboxing", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Striking" column of "AFreq"
AFreq[,2]=rowSums(activities[,temp])
#Determine the locations of matches for the "Grappling" keywords in 'activities'
keywords=c("Jiu Jitsu","Grappling","No Gi","MMA", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Grappling" column of "AFreq"
AFreq[,3]=rowSums(activities[,temp])
#Determine matches for the "Yoga" keywords in 'activities'
keywords=c("Yoga", "Flexibility", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Yoga" column of "AFreq"
AFreq[,4]=rowSums(activities[,temp])
#Determine the locations of matches for the "Strength" keywords in 'activities'
keywords=c("Strength", "Weights", "Kettlebell", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Strength" column of "AFreq"
AFreq[,5]=rowSums(activities[,temp])
#Determine the locations of matches for the "Aerobic" keywords in 'activities'
keywords=c("Aerobic", "UBFit", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Aerobic" column of "AFreq"
AFreq[,6]=rowSums(activities[,temp])
#Plot AFreq
textplot(AFreq)
View(raw)
data=raw[,(1:9)]
#Format the first column to dates and then append a new column containing just the year
data[,1]<-as.Date(data[,1], "%d-%b-%y")
data$year<-as.numeric(format(data[,1], format = "%Y"))
View(data)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data=raw[,(1:9)]
View(data)
#Format the first column to dates and then append a new column containing just the year
data[,1]<-as.Date(data[,1], "%d-%b-%y")
data$year<-as.numeric(format(data[,1], format = "%Y"))
#Tests the "Type", "Weight", and "RHR" fields for values to creates a subset 'busy' of all rows with data
nothing =((data[(1:nrow(data)),2]=='NA') & (data[(1:nrow(data)),5]=='NA') & (data[(1:nrow(data)),8]=='NA') & (data[(1:nrow(data)),9]=='NA'))
busy=subset(data, nothing==FALSE)
#Create a vector for each year contained in the data set
year=levels(as.factor(busy$year))
#Determine activity frequencies ####
#Create the data.frame 'AFreq' rows (years), columns (activities)
AFreq<-data.frame(matrix(NA, nrow=length(year), ncol = 6))
colnames(AFreq)=c('Runs', 'Striking', 'Grappling', 'Yoga', 'Strength', 'Aerobic')
rownames(AFreq)=year
#Calculate the frequency of runs in each year
AFreq[,1]=summary(as.factor(busy$year[which(as.numeric(busy[,2])>=0)]))
#Unsure what is causing this error message, but it seems to be working
#'activities' combines the Type and Note 1 columns from 'busy'(to give a full list of activities with year)
activities <-rbind(cbind(busy[,5], busy$year), cbind(busy[,6], busy$year))
#Obtain a breakdown of activities by year with 'by'
activities <-by(activities[,1],activities[,2],summary)
#Peel out each activity name
temp=names(activities[[1]])
#Convert 'activities' from a list to a dataframe
activities <-data.frame(matrix(unlist(activities), nrow=length(year), byrow=T))
rownames(activities) <-year
colnames(activities) <-temp
#Tack a column of zeroes onto 'activities' so that a minimum of two keywords are always present (ensures that the rowSums function will work)
dummy <-rep(0, times=nrow(activities))
activities=cbind(activities, dummy)
#Determine the locations of matches for the "Striking" keywords in 'activities'
keywords=c("Muay Thai","Kickboxing", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Striking" column of "AFreq"
AFreq[,2]=rowSums(activities[,temp])
#Determine the locations of matches for the "Grappling" keywords in 'activities'
keywords=c("Jiu Jitsu","Grappling","No Gi","MMA", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Grappling" column of "AFreq"
AFreq[,3]=rowSums(activities[,temp])
#Determine matches for the "Yoga" keywords in 'activities'
keywords=c("Yoga", "Flexibility", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Yoga" column of "AFreq"
AFreq[,4]=rowSums(activities[,temp])
#Determine the locations of matches for the "Strength" keywords in 'activities'
keywords=c("Strength", "Weights", "Kettlebell", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Strength" column of "AFreq"
AFreq[,5]=rowSums(activities[,temp])
#Determine the locations of matches for the "Aerobic" keywords in 'activities'
keywords=c("Aerobic", "UBFit", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Aerobic" column of "AFreq"
AFreq[,6]=rowSums(activities[,temp])
#Plot AFreq
textplot(AFreq)
library (gplots)
#Data Import and Formatting ####
#Import the running log (.csv text file)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data=raw[,(1:9)]
#Format the first column to dates and then append a new column containing just the year
data[,1]<-as.Date(data[,1], "%d-%b-%y")
data$year<-as.numeric(format(data[,1], format = "%Y"))
#Tests the "Type", "Weight", and "RHR" fields for values to creates a subset 'busy' of all rows with data
nothing =((data[(1:nrow(data)),2]=='NA') & (data[(1:nrow(data)),5]=='NA') & (data[(1:nrow(data)),8]=='NA') & (data[(1:nrow(data)),9]=='NA'))
busy=subset(data, nothing==FALSE)
#Create a vector for each year contained in the data set
year=levels(as.factor(busy$year))
#Determine activity frequencies ####
#Create the data.frame 'AFreq' rows (years), columns (activities)
AFreq<-data.frame(matrix(NA, nrow=length(year), ncol = 6))
colnames(AFreq)=c('Runs', 'Striking', 'Grappling', 'Yoga', 'Strength', 'Aerobic')
rownames(AFreq)=year
#Calculate the frequency of runs in each year
AFreq[,1]=summary(as.factor(busy$year[which(as.numeric(busy[,2])>=0)]))
#Unsure what is causing this error message, but it seems to be working
#'activities' combines the Type and Note 1 columns from 'busy'(to give a full list of activities with year)
activities <-rbind(cbind(busy[,5], busy$year), cbind(busy[,6], busy$year))
#Obtain a breakdown of activities by year with 'by'
activities <-by(activities[,1],activities[,2],summary)
#Peel out each activity name
temp=names(activities[[1]])
#Convert 'activities' from a list to a dataframe
activities <-data.frame(matrix(unlist(activities), nrow=length(year), byrow=T))
rownames(activities) <-year
colnames(activities) <-temp
#Tack a column of zeroes onto 'activities' so that a minimum of two keywords are always present (ensures that the rowSums function will work)
dummy <-rep(0, times=nrow(activities))
activities=cbind(activities, dummy)
#Determine the locations of matches for the "Striking" keywords in 'activities'
keywords=c("Muay Thai","Kickboxing", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Striking" column of "AFreq"
AFreq[,2]=rowSums(activities[,temp])
#Determine the locations of matches for the "Grappling" keywords in 'activities'
keywords=c("Jiu Jitsu","Grappling","No Gi","MMA", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Grappling" column of "AFreq"
AFreq[,3]=rowSums(activities[,temp])
#Determine matches for the "Yoga" keywords in 'activities'
keywords=c("Yoga", "Flexibility", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Yoga" column of "AFreq"
AFreq[,4]=rowSums(activities[,temp])
#Determine the locations of matches for the "Strength" keywords in 'activities'
keywords=c("Strength", "Weights", "Kettlebell", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Strength" column of "AFreq"
AFreq[,5]=rowSums(activities[,temp])
#Determine the locations of matches for the "Aerobic" keywords in 'activities'
keywords=c("Aerobic", "UBFit", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Aerobic" column of "AFreq"
AFreq[,6]=rowSums(activities[,temp])
#Plot AFreq
textplot(AFreq)
View(data)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data=raw[,(1:9)]
View(data)
data[,1]<-as.Date(data[,1], "%d-%b-%y")
View(data)
?as.Date
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
View(raw)
raw[1,]
raw[1,1]<-as.Date(data[,1], "%d-%b-%y")
temp=raw[1,1]
temp<-as.Date(temp, "%d-%b-%y")
temp
library (gplots)
#Data Import and Formatting ####
#Import the running log (.csv text file)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data=raw[,(1:9)]
#Format the first column to dates and then append a new column containing just the year
data[,1]<-as.Date(data[,1], "%d-%b-%Y")
data$year<-as.numeric(format(data[,1], format = "%Y"))
#Tests the "Type", "Weight", and "RHR" fields for values to creates a subset 'busy' of all rows with data
nothing =((data[(1:nrow(data)),2]=='NA') & (data[(1:nrow(data)),5]=='NA') & (data[(1:nrow(data)),8]=='NA') & (data[(1:nrow(data)),9]=='NA'))
busy=subset(data, nothing==FALSE)
#Create a vector for each year contained in the data set
year=levels(as.factor(busy$year))
#Determine activity frequencies ####
#Create the data.frame 'AFreq' rows (years), columns (activities)
AFreq<-data.frame(matrix(NA, nrow=length(year), ncol = 6))
colnames(AFreq)=c('Runs', 'Striking', 'Grappling', 'Yoga', 'Strength', 'Aerobic')
rownames(AFreq)=year
#Calculate the frequency of runs in each year
AFreq[,1]=summary(as.factor(busy$year[which(as.numeric(busy[,2])>=0)]))
#Unsure what is causing this error message, but it seems to be working
#'activities' combines the Type and Note 1 columns from 'busy'(to give a full list of activities with year)
activities <-rbind(cbind(busy[,5], busy$year), cbind(busy[,6], busy$year))
#Obtain a breakdown of activities by year with 'by'
activities <-by(activities[,1],activities[,2],summary)
#Peel out each activity name
temp=names(activities[[1]])
#Convert 'activities' from a list to a dataframe
activities <-data.frame(matrix(unlist(activities), nrow=length(year), byrow=T))
rownames(activities) <-year
colnames(activities) <-temp
#Tack a column of zeroes onto 'activities' so that a minimum of two keywords are always present (ensures that the rowSums function will work)
dummy <-rep(0, times=nrow(activities))
activities=cbind(activities, dummy)
#Determine the locations of matches for the "Striking" keywords in 'activities'
keywords=c("Muay Thai","Kickboxing", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Striking" column of "AFreq"
AFreq[,2]=rowSums(activities[,temp])
#Determine the locations of matches for the "Grappling" keywords in 'activities'
keywords=c("Jiu Jitsu","Grappling","No Gi","MMA", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Grappling" column of "AFreq"
AFreq[,3]=rowSums(activities[,temp])
#Determine matches for the "Yoga" keywords in 'activities'
keywords=c("Yoga", "Flexibility", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Yoga" column of "AFreq"
AFreq[,4]=rowSums(activities[,temp])
#Determine the locations of matches for the "Strength" keywords in 'activities'
keywords=c("Strength", "Weights", "Kettlebell", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Strength" column of "AFreq"
AFreq[,5]=rowSums(activities[,temp])
#Determine the locations of matches for the "Aerobic" keywords in 'activities'
keywords=c("Aerobic", "UBFit", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Aerobic" column of "AFreq"
AFreq[,6]=rowSums(activities[,temp])
#Plot AFreq
textplot(AFreq)
# The gplots library is necessary for the plottext function
library (gplots)
#Data Import and Formatting ####
#Import the running log (.csv text file)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data=raw[,(1:9)]
#Format the first column to dates and then append a new column containing just the year
data[,1]<-as.Date(data[,1], "%d-%b-%Y")
data$year<-as.numeric(format(data[,1], format = "%Y"))
#Tests the "Type", "Weight", and "RHR" fields for values to creates a subset 'busy' of all rows with data
nothing =((data[(1:nrow(data)),2]=='NA') & (data[(1:nrow(data)),5]=='NA') & (data[(1:nrow(data)),8]=='NA') & (data[(1:nrow(data)),9]=='NA'))
busy=subset(data, nothing==FALSE)
#Create a vector for each year contained in the data set
year=levels(as.factor(busy$year))
#Determine activity frequencies ####
#Create the data.frame 'AFreq' rows (years), columns (activities)
AFreq<-data.frame(matrix(NA, nrow=length(year), ncol = 6))
colnames(AFreq)=c('Runs', 'Striking', 'Grappling', 'Flexibility', 'Strength', 'Aerobic')
rownames(AFreq)=year
#Calculate the frequency of runs in each year
AFreq[,1]=summary(as.factor(busy$year[which(as.numeric(busy[,2])>=0)]))
#Unsure what is causing this error message, but it seems to be working
#'activities' combines the Type and Note 1 columns from 'busy'(to give a full list of activities with year)
activities <-rbind(cbind(busy[,5], busy$year), cbind(busy[,6], busy$year))
#Obtain a breakdown of activities by year with 'by'
activities <-by(activities[,1],activities[,2],summary)
#Peel out each activity name
temp=names(activities[[1]])
#Convert 'activities' from a list to a dataframe
activities <-data.frame(matrix(unlist(activities), nrow=length(year), byrow=T))
rownames(activities) <-year
colnames(activities) <-temp
#Tack a column of zeroes onto 'activities' so that a minimum of two keywords are always present (ensures that the rowSums function will work)
dummy <-rep(0, times=nrow(activities))
activities=cbind(activities, dummy)
#Determine the locations of matches for the "Striking" keywords in 'activities'
keywords=c("Muay Thai","Kickboxing", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Striking" column of "AFreq"
AFreq[,2]=rowSums(activities[,temp])
#Determine the locations of matches for the "Grappling" keywords in 'activities'
keywords=c("Jiu Jitsu","Grappling","No Gi","MMA", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Grappling" column of "AFreq"
AFreq[,3]=rowSums(activities[,temp])
#Determine matches for the "Yoga" keywords in 'activities'
keywords=c("Yoga", "Flexibility", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Yoga" column of "AFreq"
AFreq[,4]=rowSums(activities[,temp])
#Determine the locations of matches for the "Strength" keywords in 'activities'
keywords=c("Strength", "Weights", "Kettlebell", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Strength" column of "AFreq"
AFreq[,5]=rowSums(activities[,temp])
#Determine the locations of matches for the "Aerobic" keywords in 'activities'
keywords=c("Aerobic", "UBFit", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Aerobic" column of "AFreq"
AFreq[,6]=rowSums(activities[,temp])
#Plot AFreq
textplot(AFreq)
# The gplots library is necessary for the plottext function
library (gplots)
#Data Import and Formatting ####
#Import the running log (.csv text file)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data=raw[,(1:9)]
#Format the first column to dates and then append a new column containing just the year
data[,1]<-as.Date(data[,1], "%d-%b-%Y")
data$year<-as.numeric(format(data[,1], format = "%Y"))
#Tests the "Type", "Weight", and "RHR" fields for values to creates a subset 'busy' of all rows with data
nothing =((data[(1:nrow(data)),2]=='NA') & (data[(1:nrow(data)),5]=='NA') & (data[(1:nrow(data)),8]=='NA') & (data[(1:nrow(data)),9]=='NA'))
busy=subset(data, nothing==FALSE)
#Create a vector for each year contained in the data set
year=levels(as.factor(busy$year))
#Determine activity frequencies ####
#Create the data.frame 'AFreq' rows (years), columns (activities)
AFreq<-data.frame(matrix(NA, nrow=length(year), ncol = 6))
colnames(AFreq)=c('Runs', 'Striking', 'Grappling', 'Flexibility', 'Strength', 'Aerobic')
rownames(AFreq)=year
#Calculate the frequency of runs in each year
AFreq[,1]=summary(as.factor(busy$year[which(as.numeric(busy[,2])>=0)]))
#Unsure what is causing this error message, but it seems to be working
#'activities' combines the Type and Note 1 columns from 'busy'(to give a full list of activities with year)
activities <-rbind(cbind(busy[,5], busy$year), cbind(busy[,6], busy$year))
#Obtain a breakdown of activities by year with 'by'
activities <-by(activities[,1],activities[,2],summary)
#Peel out each activity name
temp=names(activities[[1]])
#Convert 'activities' from a list to a dataframe
activities <-data.frame(matrix(unlist(activities), nrow=length(year), byrow=T))
rownames(activities) <-year
colnames(activities) <-temp
#Tack a column of zeroes onto 'activities' so that a minimum of two keywords are always present (ensures that the rowSums function will work)
dummy <-rep(0, times=nrow(activities))
activities=cbind(activities, dummy)
#Determine the locations of matches for the "Striking" keywords in 'activities'
keywords=c("Muay Thai","Kickboxing", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Striking" column of "AFreq"
AFreq[,2]=rowSums(activities[,temp])
#Determine the locations of matches for the "Grappling" keywords in 'activities'
keywords=c("Jiu Jitsu","Grappling","No Gi","MMA", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Grappling" column of "AFreq"
AFreq[,3]=rowSums(activities[,temp])
#Determine matches for the "Yoga" keywords in 'activities'
keywords=c("Yoga", "Flexibility", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Yoga" column of "AFreq"
AFreq[,4]=rowSums(activities[,temp])
#Determine the locations of matches for the "Strength" keywords in 'activities'
keywords=c("Strength", "Weights", "Kettlebell", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Strength" column of "AFreq"
AFreq[,5]=rowSums(activities[,temp])
#Determine the locations of matches for the "Aerobic" keywords in 'activities'
keywords=c("Aerobic", "UBFit", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Aerobic" column of "AFreq"
AFreq[,6]=rowSums(activities[,temp])
#Plot AFreq
textplot(AFreq)
library("jezioro", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("jezioro")
library (gplots)
library (dplyr)
library (tidyr)
library (reshape2)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data <- tbl_df(raw[,(1:9)])
data <- data %>% separate(col = Date, into = c("day", "month", "year"), sep = "-")
#Reduces the dataset to rows with values for one of "Distance","Type", "Note1", "Weight", or "RHR"
data <- data %>% filter(!is.na(Distance..km.) | !is.na(Type) | !is.na(Note.1) | !is.na(Weight) | !is.na(RHR))
#ActivityTable ####
#Calculate the number of runs in each year
runs <- data %>% filter(!is.na(Distance..km.)) %>% group_by(year) %>% tally
#activities is all entries under 'Type' or 'Note.1' melted into a longer form
activities <-(data %>% filter(!is.na(Type) | !is.na(Note.1)) %>% select(year, Type, Note.1) %>% melt(id="year"))
#Calculate the number of striking activities in each year
striking <-filter(activities, grepl('Muay Thai|Kickboxing', value)) %>% group_by(year) %>% tally
#Calculate the number of grappling activities in each year
grappling <-filter(activities, grepl('Jiu Jitsu|Grappling|No Gi|MMA', value)) %>% group_by(year) %>% tally
#Calculate the number of flexibility activities in each year
flexibility <-filter(activities, grepl('Yoga|Flexibility', value)) %>% group_by(year) %>% tally
#Calculate the number of strength activities in each year
strength <-filter(activities, grepl('Strength|Weights|Kettlebell', value)) %>% group_by(year) %>% tally
#Calculate the number of aerobic activities in each year
aerobic <-filter(activities, grepl('Aerobic|UBFit', value)) %>% group_by(year) %>% tally
#Create ActivityTable
ActivityTable <- runs %>% left_join(striking, by = "year") %>% left_join(grappling, by = "year") %>% left_join(flexibility, by = "year") %>% left_join(strength, by = "year") %>% left_join(aerobic, by = "year")
ActivityTable <- as.data.frame(ActivityTable)
colnames(ActivityTable) <-c("Year", "Runs", "Striking", "Grappling", "Flexibility", "Strength", "Aerobic")
rownames(ActivityTable) <- ActivityTable[,1]
ActivityTable <- ActivityTable[,-1]
ActivityTable[is.na(ActivityTable)] <- 0
#Plot ActivityTable
textplot(ActivityTable)
install.packages("rgdal")
library(rgdal)
install.packages("rgdal")
install.packages("rgdal")
library(jezioro)
library(rioja)
detach("package:jezioro", unload=TRUE)
remove.packages("jezioro", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("~/Dropbox/Work/jezioro Package/jezioro_0.17.tar.gz", repos = NULL, type = "source")
install.packages("mapproj")
setwd("~/Dropbox/Work/RPackage/jezioro/R")
library(jezioro)
data("wiltseInput")
View(wiltseInput)
library(jezioro)
?wiltseBrien
setwd("~/Dropbox/Work/RPackage/jezioro/R")
library(devtools)
build(pkg="~/Dropbox/Work/RPackage/jezioro/.")
build(pkg="~/Dropbox/Work/RPackage/jezioro/.")
check_built(file.choose())
detach("package:jezioro", unload=TRUE)
remove.packages("jezioro", lib="~/R/x86_64-pc-linux-gnu-library/3.5")
