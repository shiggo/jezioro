dummy <-rep(0, times=nrow(activities))
activities=cbind(activities, dummy)
#Determine the locations of matches for the "Striking" keywords in 'activities'
keywords=c("Muay Thai","Kickboxing", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Striking" column of "AFreq"
AFreq[,2]=rowSums(activities[,temp])
#Determine the locations of matches for the "Grappling" keywords in 'activities'
keywords=c("Jiu Jitsu","Grappling","No Gi","MMA", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Grappling" column of "AFreq"
AFreq[,3]=rowSums(activities[,temp])
#Determine matches for the "Yoga" keywords in 'activities'
keywords=c("Yoga", "Flexibility", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Yoga" column of "AFreq"
AFreq[,4]=rowSums(activities[,temp])
#Determine the locations of matches for the "Strength" keywords in 'activities'
keywords=c("Strength", "Weights", "Kettlebell", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Strength" column of "AFreq"
AFreq[,5]=rowSums(activities[,temp])
#Determine the locations of matches for the "Aerobic" keywords in 'activities'
keywords=c("Aerobic", "UBFit", "dummy")
temp=grep(paste(keywords,collapse="|"), colnames(activities), value=FALSE)
#Copy temp into the "Aerobic" column of "AFreq"
AFreq[,6]=rowSums(activities[,temp])
#Plot AFreq
textplot(AFreq)
library("jezioro", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("jezioro")
library (gplots)
library (dplyr)
library (tidyr)
library (reshape2)
raw=read.csv (file=file.choose(),stringsAsFactors=FALSE, na.strings = '')
#Only the actual data columns will be included in the data.frame 'data'
data <- tbl_df(raw[,(1:9)])
data <- data %>% separate(col = Date, into = c("day", "month", "year"), sep = "-")
#Reduces the dataset to rows with values for one of "Distance","Type", "Note1", "Weight", or "RHR"
data <- data %>% filter(!is.na(Distance..km.) | !is.na(Type) | !is.na(Note.1) | !is.na(Weight) | !is.na(RHR))
#ActivityTable ####
#Calculate the number of runs in each year
runs <- data %>% filter(!is.na(Distance..km.)) %>% group_by(year) %>% tally
#activities is all entries under 'Type' or 'Note.1' melted into a longer form
activities <-(data %>% filter(!is.na(Type) | !is.na(Note.1)) %>% select(year, Type, Note.1) %>% melt(id="year"))
#Calculate the number of striking activities in each year
striking <-filter(activities, grepl('Muay Thai|Kickboxing', value)) %>% group_by(year) %>% tally
#Calculate the number of grappling activities in each year
grappling <-filter(activities, grepl('Jiu Jitsu|Grappling|No Gi|MMA', value)) %>% group_by(year) %>% tally
#Calculate the number of flexibility activities in each year
flexibility <-filter(activities, grepl('Yoga|Flexibility', value)) %>% group_by(year) %>% tally
#Calculate the number of strength activities in each year
strength <-filter(activities, grepl('Strength|Weights|Kettlebell', value)) %>% group_by(year) %>% tally
#Calculate the number of aerobic activities in each year
aerobic <-filter(activities, grepl('Aerobic|UBFit', value)) %>% group_by(year) %>% tally
#Create ActivityTable
ActivityTable <- runs %>% left_join(striking, by = "year") %>% left_join(grappling, by = "year") %>% left_join(flexibility, by = "year") %>% left_join(strength, by = "year") %>% left_join(aerobic, by = "year")
ActivityTable <- as.data.frame(ActivityTable)
colnames(ActivityTable) <-c("Year", "Runs", "Striking", "Grappling", "Flexibility", "Strength", "Aerobic")
rownames(ActivityTable) <- ActivityTable[,1]
ActivityTable <- ActivityTable[,-1]
ActivityTable[is.na(ActivityTable)] <- 0
#Plot ActivityTable
textplot(ActivityTable)
install.packages("rgdal")
library(rgdal)
install.packages("rgdal")
install.packages("rgdal")
library(jezioro)
library(rioja)
detach("package:jezioro", unload=TRUE)
remove.packages("jezioro", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
install.packages("~/Dropbox/Work/jezioro Package/jezioro_0.17.tar.gz", repos = NULL, type = "source")
install.packages("mapproj")
setwd("~/Dropbox/Work/RPackage/jezioro/R")
library(jezioro)
data("wiltseInput")
View(wiltseInput)
library(jezioro)
?wiltseBrien
setwd("~/Dropbox/Work/RPackage/jezioro/R")
library(devtools)
build(pkg="~/Dropbox/Work/RPackage/jezioro/.")
build(pkg="~/Dropbox/Work/RPackage/jezioro/.")
check_built(file.choose())
detach("package:jezioro", unload=TRUE)
remove.packages("jezioro", lib="~/R/x86_64-pc-linux-gnu-library/3.5")
library(jezioro)
data(vrsChlaInput)
?plot
detach("package:jezioro", unload=TRUE)
vrsChla=function(d){
chla.data=d
#Move the first column (interval labels) to row names and remove from table
rownames(chla.data)=chla.data[,1]
chla.data=chla.data[,-1]
numrows <-nrow(chla.data)
rows <- as.numeric(rownames(chla.data))
chla.work <- matrix(data=NA, nrow=numrows, ncol=52, dimnames=list(c(rows),c(650:700,"chla")))
chla.work[,1]=chla.data[,1]
chla.work[,3]=chla.data[,2]
chla.work[,5]=chla.data[,3]
chla.work[,7]=chla.data[,4]
chla.work[,9]=chla.data[,5]
chla.work[,11]=chla.data[,6]
chla.work[,13]=chla.data[,7]
chla.work[,15]=chla.data[,8]
chla.work[,17]=chla.data[,9]
chla.work[,19]=chla.data[,10]
chla.work[,21]=chla.data[,11]
chla.work[,23]=chla.data[,12]
chla.work[,25]=chla.data[,13]
chla.work[,27]=chla.data[,14]
chla.work[,29]=chla.data[,15]
chla.work[,31]=chla.data[,16]
chla.work[,33]=chla.data[,17]
chla.work[,35]=chla.data[,18]
chla.work[,37]=chla.data[,19]
chla.work[,39]=chla.data[,20]
chla.work[,41]=chla.data[,21]
chla.work[,43]=chla.data[,22]
chla.work[,45]=chla.data[,23]
chla.work[,47]=chla.data[,24]
chla.work[,49]=chla.data[,25]
chla.work[,51]=chla.data[,26]
chla.work[,52]=0
for (i in seq(2,51,by=2)){chla.work[,i]=(chla.work[,(i-1)]+chla.work[,(i+1)])/2}
for (i in 1:numrows){chla.work[i,52]=(0.0919*((sum(chla.work[i,]))-((chla.work[i,1]*51)+(((chla.work[i,51]-chla.work[i,1])*51)/2)))+0.0011)}
# For reference, the formulae that are used to fill in the final column (chla) are below:
# area.under.curve <- sum(chla.work[1,])
# area.under.line <- (chla.work[1,1]*51)+(((chla.work[1,51]-chla.work[1,1])*51)/2)
# peak.area <-area.under.curve-area.under.line
# chla.work[1,52] <- (0.0919*peak.area)+0.0011
# Produces a figure of the chla over depth, scaled in a separate window
limit=(max(rows)+0.1*(max(rows)))
#Plot titles
main.title=expression(paste("VRS-inferred chlorophyll ", italic("a"), " profile"))
xaxis.title=expression(paste("Inferred chlorophyll ", italic("a"), " (mg"%.%"g"^{-1}, " dry mass)"))
yaxis.title="Core depth (cm)"
plot(chla.work[,52],rows, type="p",lwd=2, main=main.title, xlab=xaxis.title, ylab=yaxis.title, ylim=c(limit,0), xlim=c(0,((max(chla.work[,52])+sd(chla.work[,52])))))
# adds a line at 0.01 mg/g, indicating the limit of detection for the method
abline(v=0.01, lwd=1.5, col="red")
text(0.15, limit,"limit of detection \n (0.01 mg/g)", cex=0.8, col="red")
#
chl.a.output <- matrix(data=NA,nrow=numrows, ncol=2, dimnames=list(c(rows),c("Core Depth(cm)","VRS-chla (mg/g dry wt)")))
chl.a.output[,1]=rows
chl.a.output[,2]=chla.work[,52]
# returns the 'chl.a.output' matrix
return(chl.a.output)
}
vrsChla(vrsChlaInput)
vrsChla=function(d){
chla.data=d
#Move the first column (interval labels) to row names and remove from table
rownames(chla.data)=chla.data[,1]
chla.data=chla.data[,-1]
numrows <-nrow(chla.data)
rows <- as.numeric(rownames(chla.data))
chla.work <- matrix(data=NA, nrow=numrows, ncol=52, dimnames=list(c(rows),c(650:700,"chla")))
chla.work[,1]=chla.data[,1]
chla.work[,3]=chla.data[,2]
chla.work[,5]=chla.data[,3]
chla.work[,7]=chla.data[,4]
chla.work[,9]=chla.data[,5]
chla.work[,11]=chla.data[,6]
chla.work[,13]=chla.data[,7]
chla.work[,15]=chla.data[,8]
chla.work[,17]=chla.data[,9]
chla.work[,19]=chla.data[,10]
chla.work[,21]=chla.data[,11]
chla.work[,23]=chla.data[,12]
chla.work[,25]=chla.data[,13]
chla.work[,27]=chla.data[,14]
chla.work[,29]=chla.data[,15]
chla.work[,31]=chla.data[,16]
chla.work[,33]=chla.data[,17]
chla.work[,35]=chla.data[,18]
chla.work[,37]=chla.data[,19]
chla.work[,39]=chla.data[,20]
chla.work[,41]=chla.data[,21]
chla.work[,43]=chla.data[,22]
chla.work[,45]=chla.data[,23]
chla.work[,47]=chla.data[,24]
chla.work[,49]=chla.data[,25]
chla.work[,51]=chla.data[,26]
chla.work[,52]=0
for (i in seq(2,51,by=2)){chla.work[,i]=(chla.work[,(i-1)]+chla.work[,(i+1)])/2}
for (i in 1:numrows){chla.work[i,52]=(0.0919*((sum(chla.work[i,]))-((chla.work[i,1]*51)+(((chla.work[i,51]-chla.work[i,1])*51)/2)))+0.0011)}
# For reference, the formulae that are used to fill in the final column (chla) are below:
# area.under.curve <- sum(chla.work[1,])
# area.under.line <- (chla.work[1,1]*51)+(((chla.work[1,51]-chla.work[1,1])*51)/2)
# peak.area <-area.under.curve-area.under.line
# chla.work[1,52] <- (0.0919*peak.area)+0.0011
# Produces a figure of the chla over depth, scaled in a separate window
limit=(max(rows)+0.1*(max(rows)))
#Plot titles
main.title=expression(paste("VRS-inferred chlorophyll ", italic("a"), " profile"))
xaxis.title=expression(paste("Inferred chlorophyll ", italic("a"), " (mg"%.%"g"^{-1}, " dry mass)"))
yaxis.title="Core depth (cm)"
plot(chla.work[,52],rows, type="p",lwd=1, main=main.title, xlab=xaxis.title, ylab=yaxis.title, ylim=c(limit,0), xlim=c(0,((max(chla.work[,52])+sd(chla.work[,52])))))
# adds a line at 0.01 mg/g, indicating the limit of detection for the method
abline(v=0.01, lwd=1.5, col="red")
text(0.15, limit,"limit of detection \n (0.01 mg/g)", cex=0.8, col="red")
#
chl.a.output <- matrix(data=NA,nrow=numrows, ncol=2, dimnames=list(c(rows),c("Core Depth(cm)","VRS-chla (mg/g dry wt)")))
chl.a.output[,1]=rows
chl.a.output[,2]=chla.work[,52]
# returns the 'chl.a.output' matrix
return(chl.a.output)
}
vrsChla(vrsChlaInput)
vrsChla=function(d){
chla.data=d
#Move the first column (interval labels) to row names and remove from table
rownames(chla.data)=chla.data[,1]
chla.data=chla.data[,-1]
numrows <-nrow(chla.data)
rows <- as.numeric(rownames(chla.data))
chla.work <- matrix(data=NA, nrow=numrows, ncol=52, dimnames=list(c(rows),c(650:700,"chla")))
chla.work[,1]=chla.data[,1]
chla.work[,3]=chla.data[,2]
chla.work[,5]=chla.data[,3]
chla.work[,7]=chla.data[,4]
chla.work[,9]=chla.data[,5]
chla.work[,11]=chla.data[,6]
chla.work[,13]=chla.data[,7]
chla.work[,15]=chla.data[,8]
chla.work[,17]=chla.data[,9]
chla.work[,19]=chla.data[,10]
chla.work[,21]=chla.data[,11]
chla.work[,23]=chla.data[,12]
chla.work[,25]=chla.data[,13]
chla.work[,27]=chla.data[,14]
chla.work[,29]=chla.data[,15]
chla.work[,31]=chla.data[,16]
chla.work[,33]=chla.data[,17]
chla.work[,35]=chla.data[,18]
chla.work[,37]=chla.data[,19]
chla.work[,39]=chla.data[,20]
chla.work[,41]=chla.data[,21]
chla.work[,43]=chla.data[,22]
chla.work[,45]=chla.data[,23]
chla.work[,47]=chla.data[,24]
chla.work[,49]=chla.data[,25]
chla.work[,51]=chla.data[,26]
chla.work[,52]=0
for (i in seq(2,51,by=2)){chla.work[,i]=(chla.work[,(i-1)]+chla.work[,(i+1)])/2}
for (i in 1:numrows){chla.work[i,52]=(0.0919*((sum(chla.work[i,]))-((chla.work[i,1]*51)+(((chla.work[i,51]-chla.work[i,1])*51)/2)))+0.0011)}
# For reference, the formulae that are used to fill in the final column (chla) are below:
# area.under.curve <- sum(chla.work[1,])
# area.under.line <- (chla.work[1,1]*51)+(((chla.work[1,51]-chla.work[1,1])*51)/2)
# peak.area <-area.under.curve-area.under.line
# chla.work[1,52] <- (0.0919*peak.area)+0.0011
# Produces a figure of the chla over depth, scaled in a separate window
limit=(max(rows)+0.1*(max(rows)))
#Plot titles
main.title=expression(paste("VRS-inferred chlorophyll ", italic("a"), " profile"))
xaxis.title=expression(paste("Inferred chlorophyll ", italic("a"), " (mg"%.%"g"^{-1}, " dry mass)"))
yaxis.title="Core depth (cm)"
plot(chla.work[,52],rows, type="p", pch=21, fill="black", lwd=1, main=main.title, xlab=xaxis.title, ylab=yaxis.title, ylim=c(limit,0), xlim=c(0,((max(chla.work[,52])+sd(chla.work[,52])))))
# adds a line at 0.01 mg/g, indicating the limit of detection for the method
abline(v=0.01, lwd=1.5, col="red")
text(0.15, limit,"limit of detection \n (0.01 mg/g)", cex=0.8, col="red")
#
chl.a.output <- matrix(data=NA,nrow=numrows, ncol=2, dimnames=list(c(rows),c("Core Depth(cm)","VRS-chla (mg/g dry wt)")))
chl.a.output[,1]=rows
chl.a.output[,2]=chla.work[,52]
# returns the 'chl.a.output' matrix
return(chl.a.output)
}
vrsChla(vrsChlaInput)
vrsChla=function(d){
chla.data=d
#Move the first column (interval labels) to row names and remove from table
rownames(chla.data)=chla.data[,1]
chla.data=chla.data[,-1]
numrows <-nrow(chla.data)
rows <- as.numeric(rownames(chla.data))
chla.work <- matrix(data=NA, nrow=numrows, ncol=52, dimnames=list(c(rows),c(650:700,"chla")))
chla.work[,1]=chla.data[,1]
chla.work[,3]=chla.data[,2]
chla.work[,5]=chla.data[,3]
chla.work[,7]=chla.data[,4]
chla.work[,9]=chla.data[,5]
chla.work[,11]=chla.data[,6]
chla.work[,13]=chla.data[,7]
chla.work[,15]=chla.data[,8]
chla.work[,17]=chla.data[,9]
chla.work[,19]=chla.data[,10]
chla.work[,21]=chla.data[,11]
chla.work[,23]=chla.data[,12]
chla.work[,25]=chla.data[,13]
chla.work[,27]=chla.data[,14]
chla.work[,29]=chla.data[,15]
chla.work[,31]=chla.data[,16]
chla.work[,33]=chla.data[,17]
chla.work[,35]=chla.data[,18]
chla.work[,37]=chla.data[,19]
chla.work[,39]=chla.data[,20]
chla.work[,41]=chla.data[,21]
chla.work[,43]=chla.data[,22]
chla.work[,45]=chla.data[,23]
chla.work[,47]=chla.data[,24]
chla.work[,49]=chla.data[,25]
chla.work[,51]=chla.data[,26]
chla.work[,52]=0
for (i in seq(2,51,by=2)){chla.work[,i]=(chla.work[,(i-1)]+chla.work[,(i+1)])/2}
for (i in 1:numrows){chla.work[i,52]=(0.0919*((sum(chla.work[i,]))-((chla.work[i,1]*51)+(((chla.work[i,51]-chla.work[i,1])*51)/2)))+0.0011)}
# For reference, the formulae that are used to fill in the final column (chla) are below:
# area.under.curve <- sum(chla.work[1,])
# area.under.line <- (chla.work[1,1]*51)+(((chla.work[1,51]-chla.work[1,1])*51)/2)
# peak.area <-area.under.curve-area.under.line
# chla.work[1,52] <- (0.0919*peak.area)+0.0011
# Produces a figure of the chla over depth, scaled in a separate window
limit=(max(rows)+0.1*(max(rows)))
#Plot titles
main.title=expression(paste("VRS-inferred chlorophyll ", italic("a"), " profile"))
xaxis.title=expression(paste("Inferred chlorophyll ", italic("a"), " (mg"%.%"g"^{-1}, " dry mass)"))
yaxis.title="Core depth (cm)"
plot(chla.work[,52],rows, type="p", pch=21, colour="black", lwd=1, main=main.title, xlab=xaxis.title, ylab=yaxis.title, ylim=c(limit,0), xlim=c(0,((max(chla.work[,52])+sd(chla.work[,52])))))
# adds a line at 0.01 mg/g, indicating the limit of detection for the method
abline(v=0.01, lwd=1.5, col="red")
text(0.15, limit,"limit of detection \n (0.01 mg/g)", cex=0.8, col="red")
#
chl.a.output <- matrix(data=NA,nrow=numrows, ncol=2, dimnames=list(c(rows),c("Core Depth(cm)","VRS-chla (mg/g dry wt)")))
chl.a.output[,1]=rows
chl.a.output[,2]=chla.work[,52]
# returns the 'chl.a.output' matrix
return(chl.a.output)
}
warnings()
vrsChla=function(d){
chla.data=d
#Move the first column (interval labels) to row names and remove from table
rownames(chla.data)=chla.data[,1]
chla.data=chla.data[,-1]
numrows <-nrow(chla.data)
rows <- as.numeric(rownames(chla.data))
chla.work <- matrix(data=NA, nrow=numrows, ncol=52, dimnames=list(c(rows),c(650:700,"chla")))
chla.work[,1]=chla.data[,1]
chla.work[,3]=chla.data[,2]
chla.work[,5]=chla.data[,3]
chla.work[,7]=chla.data[,4]
chla.work[,9]=chla.data[,5]
chla.work[,11]=chla.data[,6]
chla.work[,13]=chla.data[,7]
chla.work[,15]=chla.data[,8]
chla.work[,17]=chla.data[,9]
chla.work[,19]=chla.data[,10]
chla.work[,21]=chla.data[,11]
chla.work[,23]=chla.data[,12]
chla.work[,25]=chla.data[,13]
chla.work[,27]=chla.data[,14]
chla.work[,29]=chla.data[,15]
chla.work[,31]=chla.data[,16]
chla.work[,33]=chla.data[,17]
chla.work[,35]=chla.data[,18]
chla.work[,37]=chla.data[,19]
chla.work[,39]=chla.data[,20]
chla.work[,41]=chla.data[,21]
chla.work[,43]=chla.data[,22]
chla.work[,45]=chla.data[,23]
chla.work[,47]=chla.data[,24]
chla.work[,49]=chla.data[,25]
chla.work[,51]=chla.data[,26]
chla.work[,52]=0
for (i in seq(2,51,by=2)){chla.work[,i]=(chla.work[,(i-1)]+chla.work[,(i+1)])/2}
for (i in 1:numrows){chla.work[i,52]=(0.0919*((sum(chla.work[i,]))-((chla.work[i,1]*51)+(((chla.work[i,51]-chla.work[i,1])*51)/2)))+0.0011)}
# For reference, the formulae that are used to fill in the final column (chla) are below:
# area.under.curve <- sum(chla.work[1,])
# area.under.line <- (chla.work[1,1]*51)+(((chla.work[1,51]-chla.work[1,1])*51)/2)
# peak.area <-area.under.curve-area.under.line
# chla.work[1,52] <- (0.0919*peak.area)+0.0011
# Produces a figure of the chla over depth, scaled in a separate window
limit=(max(rows)+0.1*(max(rows)))
#Plot titles
main.title=expression(paste("VRS-inferred chlorophyll ", italic("a"), " profile"))
xaxis.title=expression(paste("Inferred chlorophyll ", italic("a"), " (mg"%.%"g"^{-1}, " dry mass)"))
yaxis.title="Core depth (cm)"
plot(chla.work[,52],rows, type="p", pch=21, colour="black", lwd=1, main=main.title, xlab=xaxis.title, ylab=yaxis.title, ylim=c(limit,0), xlim=c(0,((max(chla.work[,52])+sd(chla.work[,52])))))
# adds a line at 0.01 mg/g, indicating the limit of detection for the method
abline(v=0.01, lwd=1.5, col="red")
text(0.15, limit,"limit of detection \n (0.01 mg/g)", cex=0.8, col="red")
#
chl.a.output <- matrix(data=NA,nrow=numrows, ncol=2, dimnames=list(c(rows),c("Core Depth(cm)","VRS-chla (mg/g dry wt)")))
chl.a.output[,1]=rows
chl.a.output[,2]=chla.work[,52]
# returns the 'chl.a.output' matrix
return(chl.a.output)
}
vrsChla(vrsChlaInput)
vrsChla=function(d){
chla.data=d
#Move the first column (interval labels) to row names and remove from table
rownames(chla.data)=chla.data[,1]
chla.data=chla.data[,-1]
numrows <-nrow(chla.data)
rows <- as.numeric(rownames(chla.data))
chla.work <- matrix(data=NA, nrow=numrows, ncol=52, dimnames=list(c(rows),c(650:700,"chla")))
chla.work[,1]=chla.data[,1]
chla.work[,3]=chla.data[,2]
chla.work[,5]=chla.data[,3]
chla.work[,7]=chla.data[,4]
chla.work[,9]=chla.data[,5]
chla.work[,11]=chla.data[,6]
chla.work[,13]=chla.data[,7]
chla.work[,15]=chla.data[,8]
chla.work[,17]=chla.data[,9]
chla.work[,19]=chla.data[,10]
chla.work[,21]=chla.data[,11]
chla.work[,23]=chla.data[,12]
chla.work[,25]=chla.data[,13]
chla.work[,27]=chla.data[,14]
chla.work[,29]=chla.data[,15]
chla.work[,31]=chla.data[,16]
chla.work[,33]=chla.data[,17]
chla.work[,35]=chla.data[,18]
chla.work[,37]=chla.data[,19]
chla.work[,39]=chla.data[,20]
chla.work[,41]=chla.data[,21]
chla.work[,43]=chla.data[,22]
chla.work[,45]=chla.data[,23]
chla.work[,47]=chla.data[,24]
chla.work[,49]=chla.data[,25]
chla.work[,51]=chla.data[,26]
chla.work[,52]=0
for (i in seq(2,51,by=2)){chla.work[,i]=(chla.work[,(i-1)]+chla.work[,(i+1)])/2}
for (i in 1:numrows){chla.work[i,52]=(0.0919*((sum(chla.work[i,]))-((chla.work[i,1]*51)+(((chla.work[i,51]-chla.work[i,1])*51)/2)))+0.0011)}
# For reference, the formulae that are used to fill in the final column (chla) are below:
# area.under.curve <- sum(chla.work[1,])
# area.under.line <- (chla.work[1,1]*51)+(((chla.work[1,51]-chla.work[1,1])*51)/2)
# peak.area <-area.under.curve-area.under.line
# chla.work[1,52] <- (0.0919*peak.area)+0.0011
# Produces a figure of the chla over depth, scaled in a separate window
limit=(max(rows)+0.1*(max(rows)))
#Plot titles
main.title=expression(paste("VRS-inferred chlorophyll ", italic("a"), " profile"))
xaxis.title=expression(paste("Inferred chlorophyll ", italic("a"), " (mg"%.%"g"^{-1}, " dry mass)"))
yaxis.title="Core depth (cm)"
plot(chla.work[,52],rows, type="p", pch=21, bg="black", lwd=1, main=main.title, xlab=xaxis.title, ylab=yaxis.title, ylim=c(limit,0), xlim=c(0,((max(chla.work[,52])+sd(chla.work[,52])))))
# adds a line at 0.01 mg/g, indicating the limit of detection for the method
abline(v=0.01, lwd=1.5, col="red")
text(0.15, limit,"limit of detection \n (0.01 mg/g)", cex=0.8, col="red")
#
chl.a.output <- matrix(data=NA,nrow=numrows, ncol=2, dimnames=list(c(rows),c("Core Depth(cm)","VRS-chla (mg/g dry wt)")))
chl.a.output[,1]=rows
chl.a.output[,2]=chla.work[,52]
# returns the 'chl.a.output' matrix
return(chl.a.output)
}
vrsChla(vrsChlaInput)
vrsChla=function(d){
chla.data=d
#Move the first column (interval labels) to row names and remove from table
rownames(chla.data)=chla.data[,1]
chla.data=chla.data[,-1]
numrows <-nrow(chla.data)
rows <- as.numeric(rownames(chla.data))
chla.work <- matrix(data=NA, nrow=numrows, ncol=52, dimnames=list(c(rows),c(650:700,"chla")))
chla.work[,1]=chla.data[,1]
chla.work[,3]=chla.data[,2]
chla.work[,5]=chla.data[,3]
chla.work[,7]=chla.data[,4]
chla.work[,9]=chla.data[,5]
chla.work[,11]=chla.data[,6]
chla.work[,13]=chla.data[,7]
chla.work[,15]=chla.data[,8]
chla.work[,17]=chla.data[,9]
chla.work[,19]=chla.data[,10]
chla.work[,21]=chla.data[,11]
chla.work[,23]=chla.data[,12]
chla.work[,25]=chla.data[,13]
chla.work[,27]=chla.data[,14]
chla.work[,29]=chla.data[,15]
chla.work[,31]=chla.data[,16]
chla.work[,33]=chla.data[,17]
chla.work[,35]=chla.data[,18]
chla.work[,37]=chla.data[,19]
chla.work[,39]=chla.data[,20]
chla.work[,41]=chla.data[,21]
chla.work[,43]=chla.data[,22]
chla.work[,45]=chla.data[,23]
chla.work[,47]=chla.data[,24]
chla.work[,49]=chla.data[,25]
chla.work[,51]=chla.data[,26]
chla.work[,52]=0
for (i in seq(2,51,by=2)){chla.work[,i]=(chla.work[,(i-1)]+chla.work[,(i+1)])/2}
for (i in 1:numrows){chla.work[i,52]=(0.0919*((sum(chla.work[i,]))-((chla.work[i,1]*51)+(((chla.work[i,51]-chla.work[i,1])*51)/2)))+0.0011)}
# For reference, the formulae that are used to fill in the final column (chla) are below:
# area.under.curve <- sum(chla.work[1,])
# area.under.line <- (chla.work[1,1]*51)+(((chla.work[1,51]-chla.work[1,1])*51)/2)
# peak.area <-area.under.curve-area.under.line
# chla.work[1,52] <- (0.0919*peak.area)+0.0011
# Produces a figure of the chla over depth, scaled in a separate window
limit=(max(rows)+0.1*(max(rows)))
#Plot titles
main.title=expression(paste("VRS-inferred chlorophyll ", italic("a"), " profile"))
xaxis.title=expression(paste("Inferred chlorophyll ", italic("a"), " (mg"%.%"g"^{-1}, " dry mass)"))
yaxis.title="Core depth (cm)"
plot(chla.work[,52],rows, type="p", pch=21, bg="black", cex =0.75, lwd=1, main=main.title, xlab=xaxis.title, ylab=yaxis.title, ylim=c(limit,0), xlim=c(0,((max(chla.work[,52])+sd(chla.work[,52])))))
# adds a line at 0.01 mg/g, indicating the limit of detection for the method
abline(v=0.01, lwd=1.5, col="red")
text(0.15, limit,"limit of detection \n (0.01 mg/g)", cex=0.8, col="red")
#
chl.a.output <- matrix(data=NA,nrow=numrows, ncol=2, dimnames=list(c(rows),c("Core Depth(cm)","VRS-chla (mg/g dry wt)")))
chl.a.output[,1]=rows
chl.a.output[,2]=chla.work[,52]
# returns the 'chl.a.output' matrix
return(chl.a.output)
}
vrsChla(vrsChlaInput)
